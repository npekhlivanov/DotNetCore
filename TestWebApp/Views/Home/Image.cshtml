@model ImageViewModel
@{
    ViewData["Title"] = "Image";
}

<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

@{
    if (!string.IsNullOrEmpty(Model.ImageData))
    {
        <div class="form-group">
            <img src="data:image/@Model.ImageEncoding;base64,@Model.ImageData" />
        </div>
    }
}

@using (Html.BeginForm("Image", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.HiddenFor(m => m.ImageEncoding)

    <div class="form-group">
        @Html.LabelFor(m => m.Resolution, new { @class = "control-label col-sm-3" })
        <div class="col-sm-3">
            @Html.DropDownListFor(m => m.Resolution, Html.GetEnumSelectList<ImageViewModel.CameraResolution>(), "", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CaptureTimeoutMilliseconds, new { @class = "control-label col-sm-3" })
        <div class="col-sm-3">
            @Html.TextBoxFor(m => m.CaptureTimeoutMilliseconds, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.VerticalFlip, new { @class = "control-label col-sm-3" })
        <div class="col-sm-3">
            @Html.CheckBoxFor(m => m.VerticalFlip, new { @class = "checkbox" })
        </div>
    </div>


    <div class="form-group">
        @Html.Label("", "Press the button to take a picture", new { @class = "control-label col-sm-3" })
        <div class="col-sm-3">
            <button type="submit" class="btn">
                <span class="glyphicon glyphicon-camera"></span> Take a picture
            </button>
        </div>
    </div>
}

